);

      ultron.remove('foo');
      assume(ee.listeners('foo').length).equals(1);
      assume(ee.listeners('foo')[0]).equals(foo);
    });

    it('removes our private __ultron references', function () {
      function once() {}
      function on() {}

      assume('__ultron' in once).is.false();
      assume('__ultron' in on).is.false();

      ultron.on('foo', on);
      ultron.once('bar', once);

      assume('__ultron' in once).is.true();
      assume('__ultron' in on).is.true();

      ultron.remove('foo, bar');

      assume('__ultron' in once).is.false();
      assume('__ultron' in on).is.false();

      ultron.destroy();

      ee = new EE();
      ultron = new Ultron(ee);

      assume('__ultron' in once).is.false();
      assume('__ultron' in on).is.false();

      ultron.on('foo', on);
      ultron.once('bar', once);

      assume('__ultron' in once).is.true();
      assume('__ultron' in on).is.true();

      ultron.remove('foo, bar');

      assume('__ultron' in once).is.false();
      assume('__ultron' in on).is.false();
    });

    it('removes only our assigned `once` listeners', function () {
      function foo() {}
      function bar() {}

      ee.once('foo', foo);
      ultron.once('foo', bar);
      assume(ee.listeners('foo').length).equals(2);

      ultron.remove('foo');
      assume(ee.listeners('foo').length).equals(1);
      assume(ee.listeners('foo')[0]).equals(foo);
    });

    it('removes only our assigned `once` listeners from regular EE', function () {
      var ee = new EE()
        , ultron = new Ultron(ee);

      function foo() {}
      function bar() {}

      ee.once('foo', foo);
      ultron.once('foo', bar);
      assume(ee.listeners('foo').length).equals(2);

      ultron.remove('foo');
      assume(ee.listeners('foo').length).equals(1);
      assume(ee.listeners('foo')[0].listener).equals(foo);
    });

    it('removes all assigned events if called without args', function () {
      function foo() {}
      function bar() {}

      ul